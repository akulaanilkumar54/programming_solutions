// Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

// An input string is valid if:

// Open brackets must be closed by the same type of brackets.
// Open brackets must be closed in the correct order.
// Every close bracket has a corresponding open bracket of the same type.
 

// Example 1:

// Input: s = "()"
// Output: true
// Example 2:

// Input: s = "()[]{}"
// Output: true


class Solution {
    public boolean isValid(String s) {
        int i=0;
        int j=0;
        int k=0;
        String a="";
        String b="";
        for(int l=0;l<s.length();l++)
        {
          if(s.charAt(l)=='('||s.charAt(l)=='['||s.charAt(l)=='{'){
            a=a+s.charAt(l);
            }
            else if(s.charAt(l)==')'&&a.length()>0&& a.charAt(a.length()-1)=='(')
            {
               a=a.substring(0,a.length()-1);
            }
                        else if(s.charAt(l)=='}'&&a.length()>0&& a.charAt(a.length()-1)=='{') 
            {
                              a=a.substring(0,a.length()-1);
            }
                        else if(s.charAt(l)==']'&&a.length()>0&& a.charAt(a.length()-1)=='[')
            {
                              a=a.substring(0,a.length()-1);
            }
            else
                return false;
            }
        System.out.println(a);
        if(a.length()>0)
            return false;
       else
        return true;
    }
}
